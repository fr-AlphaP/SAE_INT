services:
# Remplacement de NGINX par Caddy pour la gestion des certificats SSL et du reverse proxy
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ./site/:/srv:ro
    networks:
      - grafana-net

  php:
    build: ./php
    restart: unless-stopped
    volumes:
      - ./php/api.php:/var/www/html/api.php
      - ./py:/py 
    networks:
      - grafana-net

  postgres:
    image: postgres:15
    container_name: postgres_for_grafana
    restart: always
    environment:
      - POSTGRES_USER=grafana
      - POSTGRES_DB=grafana
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password 
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - grafana-net
    secrets:
       - db_password

  grafana:
    image: grafana/grafana-enterprise:${GRAFANA_VERSION}
    container_name: grafana
    restart: unless-stopped
    environment:
    # BDD (inchangé)
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_SSL_MODE=disable
      - GF_DATABASE_PASSWORD__FILE=/run/secrets/db_password
    # Grafana 
      - GF_SERVER_ROOT_URL=${GRAFANA_SERVER_ROOT_URL}
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_COOKIE_SAMESITE=lax
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/GF_SECURITY_ADMIN_USER__FILE
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/GF_SECURITY_ADMIN_PASSWORD__FILE
    #ports: Géré par caddy
    #  - '${GRAFANA_PORT}:3000'
    volumes:
      - grafana_storage:/var/lib/grafana
    secrets:
      - GF_SECURITY_ADMIN_USER__FILE
      - GF_SECURITY_ADMIN_PASSWORD__FILE
      - db_password
    depends_on:
      - influxdb2
      - postgres
    networks:
      - grafana-net
  
  influxdb2:
    image: influxdb:${INFLUXDB_VERSION}
    container_name: ${INFLUXDB_CONTAINER_NAME}
    restart: unless-stopped
    #ports: Caddy gère l'accès pas besoin d'indiquer les ports
    #  - '${INFLUXDB_PORT}:8086'
    env_file:
      - ./.env
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - influxdb2-data:/var/lib/influxdb2
      - influxdb2-config:/etc/influxdb2
    networks: 
      - grafana-net

  telegraf:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegraf
    restart: always
    env_file:
      - ./.env
    secrets:
      - influxdb2-admin-token
    volumes:
      - ${TELEGRAF_CONF_FILE}:/etc/telegraf/telegraf.conf:ro
      - ./py/script.py:/scripts/script.py:ro
      - ./py/alert.py:/scripts/alert.py:ro
    depends_on:
      - influxdb2
    networks: 
      - grafana-net

volumes:
  grafana_storage: {}
  influxdb2-data: {}
  influxdb2-config: {}
  postgres-data: {}
  caddy_data: {}
  caddy_config: {}

secrets:
  influxdb2-admin-username:
    file: ./secrets/influxdb2-admin-username
  influxdb2-admin-password:
    file: ./secrets/influxdb2-admin-password
  influxdb2-admin-token:
    file: ./secrets/influxdb2-admin-token
  GF_SECURITY_ADMIN_USER__FILE:
    file: ./secrets/grafana-admin-username
  GF_SECURITY_ADMIN_PASSWORD__FILE:
    file: ./secrets/grafana-admin-password
  db_password:
      file: ./secrets/grafana-postgres-password

networks:
  grafana-net:
    driver: bridge




